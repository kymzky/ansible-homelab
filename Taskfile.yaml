---
version: '3'

vars:
  VAULT_PASS_FILE: ".vault-pass"

tasks:
  default:
    desc: Launch and set up multipass environment
    aliases: [multipass]
    cmds:
      - task: multipass-launch
      - task: multipass-site
    silent: true

  multipass-backup:
    desc: Backup multipass NFS share
    cmds:
      - ansible-playbook --vault-pass-file {{.VAULT_PASS_FILE}} -i inventory/multipass.yaml playbooks/backup.yaml
    silent: true

  multipass-launch:
    desc: Launch multipass VMs
    cmds: [./multipass/launch.sh]
    silent: true

  multipass-restore:
    desc: Restore multipass NFS share to localhost
    cmds:
      - ansible-playbook --vault-pass-file {{.VAULT_PASS_FILE}} -i inventory/multipass.yaml playbooks/restore.yaml
    silent: true

  multipass-site:
    desc: Run site.yaml against multipass
    cmds:
      - ansible-playbook --vault-pass-file {{.VAULT_PASS_FILE}} -i inventory/multipass.yaml playbooks/site.yaml
    silent: true

  multipass-delete:
    desc: Delete multipass VMs
    cmds:
      - multipass stop --force control
      - multipass stop --force worker1
      - multipass stop --force worker2
      - multipass delete control
      - multipass delete worker1
      - multipass delete worker2
      - multipass purge
      - nmcli connection delete multipassbr
    silent: true

  prod-backup:
    desc: Backup prod NFS share
    cmds:
      - ansible-playbook --vault-pass-file {{.VAULT_PASS_FILE}} -i inventory/prod.yaml playbooks/backup.yaml
    silent: true

  prod-restore:
    desc: Restore prod NFS share to localhost
    cmds:
      - ansible-playbook --vault-pass-file {{.VAULT_PASS_FILE}} -i inventory/prod.yaml playbooks/restore.yaml
    silent: true

  prod-site:
    desc: Run site.yaml against prod
    cmds:
      - ansible-playbook --vault-pass-file {{.VAULT_PASS_FILE}} -i inventory/prod.yaml playbooks/site.yaml
    silent: true
